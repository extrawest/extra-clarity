name: "Reusable action: get the prefix for the Storybook hosting site according to the Extra-Clarity package version"

description: ""

inputs:
  tag:
    type: string
    required: true
    description: "Tag name according to the version from package.json, e.g. v12.1.2"
  major-version:
    type: string
    required: true
    description: "Major version of the package, e.g. 17 for a tag v17.1.2"
  primary-release-branch:
    type: string
    required: true
    description: "Name of the primary releasing branch, e.g. 'main', containing releases for the most actual package versions"

outputs:
  prefix:
    description: "Prefix to prepend the address of the storybook hosting site, e.g. v17-"
    value: ${{ steps.get-prefix.outputs.prefix }}

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Ensure we fetch all branches

    - id: get-prefix
      env:
        RELEASE_TAG_NAME: ${{ inputs.tag }}
        MAJOR_VERSION: ${{ inputs.major-version }}
        PRIMARY_RELEASE_BRANCH: ${{ inputs.primary-release-branch }}
        SECONDARY_RELEASE_BRANCH: "${{ inputs.major-version }}.x"
      run: |
        git fetch --all

        STORYBOOK_URL_PREFIX=""

        if [[ -n "$(git branch -r --contains ${RELEASE_TAG_NAME} | grep "origin/${SECONDARY_RELEASE_BRANCH}" || echo "")" ]]; then
          echo "Tag '${RELEASE_TAG_NAME}' exists on the secondary releasing branch '${SECONDARY_RELEASE_BRANCH}'"
          STORYBOOK_URL_PREFIX="v${MAJOR_VERSION}-"
        elif [[ -n "$(git branch -r --contains ${RELEASE_TAG_NAME} | grep "origin/${PRIMARY_RELEASE_BRANCH}" || echo "")" ]]; then
          echo "Tag '${RELEASE_TAG_NAME}' exists on the primary releasing branch '${PRIMARY_RELEASE_BRANCH}'"
        else
          echo "Tag '${RELEASE_TAG_NAME}' has been published on a wrong branch! Please re-check: the most actual version should be released on the '${PRIMARY_RELEASE_BRANCH}' branch, and previous versions on their dedicated branch '${MAJOR_VERSION}.x'"
          exit 1
        fi

        echo "Prefix for the Storybook's Firebase Hosting site: ${STORYBOOK_URL_PREFIX}"
        echo "prefix=$STORYBOOK_URL_PREFIX" >> $GITHUB_OUTPUT
