name: 'Match package version and branch to decide if package should be marked as latest'

inputs:
  tag:
    type: string
    required: true
    description: 'Tag name according to the version from package.json, e.g. v12.1.2'
  major-version:
    type: string
    required: true
    description: 'Major version of the package, e.g. 17 for a tag v17.1.2'
  primary-release-branch:
    type: string
    required: true
    description: "Name of the primary releasing branch, e.g. 'main', containing releases for the latest package versions"

outputs:
  is-latest:
    description: 'true for the primary releasing branch (main), and false for secondary (17.x, 18.x, etc)'
    value: ${{ steps.get-is-latest.outputs.is-latest }}

runs:
  using: composite
  steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Ensure we fetch all branches

    - id: get-is-latest
      env:
        RELEASE_TAG_NAME: ${{ inputs.tag }}
        MAJOR_VERSION: ${{ inputs.major-version }}
        PRIMARY_RELEASE_BRANCH: ${{ inputs.primary-release-branch }}
        SECONDARY_RELEASE_BRANCH: ${{ inputs.major-version }}.x
      shell: bash
      run: |
        git fetch --all

        IS_LATEST=""

        if [[ -n "$(git branch -r --contains tags/${RELEASE_TAG_NAME} | grep "origin/${SECONDARY_RELEASE_BRANCH}" || echo "")" ]]; then
          echo "Tag '${RELEASE_TAG_NAME}' exists on the secondary releasing branch '${SECONDARY_RELEASE_BRANCH}'"
          IS_LATEST="false"
        elif [[ -n "$(git branch -r --contains tags/${RELEASE_TAG_NAME} | grep "origin/${PRIMARY_RELEASE_BRANCH}" || echo "")" ]]; then
          echo "Tag '${RELEASE_TAG_NAME}' exists on the primary releasing branch '${PRIMARY_RELEASE_BRANCH}'"
          IS_LATEST="true"
        else
          echo "Tag '${RELEASE_TAG_NAME}' seems to be published on a wrong branch! Please re-check: the latest version should be released on the '${PRIMARY_RELEASE_BRANCH}' branch, and previous versions on their dedicated branch '${MAJOR_VERSION}.x'"
          exit 1
        fi

        echo "The package should be marked as latest: ${IS_LATEST}"
        echo "is-latest=${IS_LATEST}" >> $GITHUB_OUTPUT
