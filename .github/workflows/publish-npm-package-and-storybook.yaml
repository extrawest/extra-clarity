name: Build & publish extra-clarity package and storybook

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-[0-9a-zA-z]+"

env:
  # artifact names (available on the github actions page after completing the workflow)
  LIB_ARTIFACT_NAME: extra-clarity-build
  # paths to specific folders & files
  LIB_DIST_PATH: dist/extra-clarity
  MAIN_PACKAGE_LOCK_JSON: package-lock.json
  NODE_MODULES_PATH: node_modules
  # settings for publishing the package
  NODE_VER: 22
  NPM_REGISTRY: https://registry.npmjs.org/
  # firebase settings from '.firebaserc' & 'firebase.json'
  SB_FIREBASE_PROJECT_ID: storybook-deploy
  SB_FIREBASE_TARGET_HOSTING: storybook-hosting
  SB_FIREBASE_MAIN_HOSTING_SITE: extra-clarity-docs # IMPORTANT: this string should be unique across entire .firebaserc
  # script names from the main 'package.json' to be called with 'npm run'
  SCRIPT_BUILD_LIB: build:extra-clarity
  SCRIPT_BUILD_STORYBOOK: build:storybook

jobs:
  check-version:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      prefix: ${{ steps.storybook-prefix.outputs.prefix }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Ensure we fetch all branches

      - name: Extracting major version
        id: extract-major
        run: |
          FULL_VERSION="${GITHUB_REF#refs/tags/v}"   # Remove 'refs/tags/v' prefix
          MAJOR_VERSION="${FULL_VERSION%%.*}"        # Extract major version
          echo "Extracted major version: $MAJOR_VERSION"
          echo "MAJOR_VERSION=$MAJOR_VERSION" >> $GITHUB_ENV

      - name: Checking if the tag was pushed to a releasing branch and evaluate the prefix for Storybook's Firebase Hosting site
        id: storybook-prefix
        run: |
          git fetch --all

          MAIN_RELEASING_BRANCH="main"                  # for releasing the most actual version
          PREV_RELEASING_BRANCH="${MAJOR_VERSION}.x"    # for releasing previous versions
          STORYBOOK_URL_PREFIX=""

          if [[ -n "$(git branch -r --contains ${GITHUB_REF_NAME} | grep "origin/${PREV_RELEASING_BRANCH}" || echo "")" ]]; then
            echo "Tag '${GITHUB_REF_NAME}' exists on the secondary releasing branch '${PREV_RELEASING_BRANCH}'"
            STORYBOOK_URL_PREFIX="v${MAJOR_VERSION}-"
          elif [[ -n "$(git branch -r --contains ${GITHUB_REF_NAME} | grep "origin/${MAIN_RELEASING_BRANCH}" || echo "")" ]]; then
            echo "Tag '${GITHUB_REF_NAME}' exists on the primary releasing branch '${MAIN_RELEASING_BRANCH}'"
          else
            echo "Tag '${GITHUB_REF_NAME}' has been published on a wrong branch! Please re-check: the most actual version should be released on the '${MAIN_RELEASING_BRANCH}' branch, and previous versions on their dedicated branch '${MAJOR_VERSION}.x'"
            exit 1
          fi

          echo "Prefix for the Storybook's Firebase Hosting site: ${STORYBOOK_URL_PREFIX}"
          echo "STORYBOOK_URL_PREFIX=" >> $GITHUB_ENV
          echo "{prefix}={$STORYBOOK_URL_PREFIX}" >> $GITHUB_OUTPUT

  build-extra-clarity:
    needs: [check-version]
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        id: node-modules-cache
        with:
          path: ${{ env.NODE_MODULES_PATH }}
          key: node-modules-${{ runner.os }}-${{ hashFiles(env.MAIN_PACKAGE_LOCK_JSON) }}
      - if: ${{ steps.node-modules-cache.outputs.cache-hit != 'true' }}
        run: npm ci
      - name: Building extra-clarity
        run: npm run ${{ env.SCRIPT_BUILD_LIB }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.LIB_ARTIFACT_NAME }}
          path: ${{ env.LIB_DIST_PATH }}
          if-no-files-found: error

  publish-package-to-npm:
    needs: [build-extra-clarity]
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VER }}
          registry-url: ${{ env.NPM_REGISTRY }}
      - uses: actions/download-artifact@v4
        with:
          name: ${{ env.LIB_ARTIFACT_NAME }}
          path: ${{ env.LIB_DIST_PATH }}
      - run: npm publish
        working-directory: ${{ env.LIB_DIST_PATH }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  build-and-publish-storybook:
    needs: [check-version, build-extra-clarity]
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        id: node-modules-cache
        with:
          path: ${{ env.NODE_MODULES_PATH }}
          key: node-modules-${{ runner.os }}-${{ hashFiles(env.MAIN_PACKAGE_LOCK_JSON) }}
      - if: ${{ steps.node-modules-cache.outputs.cache-hit != 'true' }}
        run: npm ci
      - uses: actions/download-artifact@v4
        with:
          name: ${{ env.LIB_ARTIFACT_NAME }}
          path: ${{ env.LIB_DIST_PATH }}
      - name: Building storybook
        run: npm run ${{ env.SCRIPT_BUILD_STORYBOOK }}
      - name: Correcting firebase hosting site for non-actual versions
        if: ${{ needs.check-version.outputs.prefix != '' }}
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          include: ".firebaserc"
          find: "${SB_FIREBASE_MAIN_HOSTING_SITE}"
          replace: "${{ needs.check-version.outputs.prefix }}${SB_FIREBASE_MAIN_HOSTING_SITE}"
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.STORYBOOK_FIREBASE_SERVICE_ACCOUNT }}
          projectId: ${{ env.SB_FIREBASE_PROJECT_ID }}
          target: ${{ env.SB_FIREBASE_TARGET_HOSTING }}
          channelId: live
