
name: Build & publish extra-clarity and storybook

on:
  push:
    branches:
      - main

env:
  # artifact names (available on the github actions page after completing the workflow)
  LIB_ARTIFACT_NAME: extra-clarity-build
  # paths to specific folders & files
  LIB_DIST_PATH: dist/extra-clarity
  LIB_PACKAGE_JSON: projects/extra-clarity/package.json
  MAIN_PACKAGE_LOCK_JSON: package-lock.json
  NODE_MODULES_PATH: node_modules
  # settings for publishing the package
  NODE_VER: 20
  NPM_REGISTRY: https://registry.npmjs.org/
  # firebase settings from '.firebaserc' & 'firebase.json'
  SB_FIREBASE_PROJECT_ID: storybook-deploy
  SB_FIREBASE_TARGET_HOSTING: storybook-hosting
  # script names from the main 'package.json' to be called with 'npm run'
  SCRIPT_BUILD_LIB: build:extra-clarity
  SCRIPT_BUILD_STORYBOOK: build-storybook

jobs:
  build-extra-clarity:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: node-modules-cache
        with:
          path: ${{ env.NODE_MODULES_PATH }}
          key: node-modules-${{ runner.os }}-${{ hashFiles(env.MAIN_PACKAGE_LOCK_JSON) }}
      - if: ${{ steps.node-modules-cache.outputs.cache-hit != 'true' }}
        run: npm ci
      - name: Build extra-clarity
        run: npm run ${{ env.SCRIPT_BUILD_LIB }}
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.LIB_ARTIFACT_NAME }}
          path: ${{ env.LIB_DIST_PATH }}
          if-no-files-found: error

  check-if-package-json-changed:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      package-json-changed: ${{ steps.check-package-json.outputs.changed }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: check-package-json
        with:
          filters: |
            changed:
              - ${{ env.LIB_PACKAGE_JSON }}

  publish-package-to-npm:
    needs: [build-extra-clarity, check-if-package-json-changed]
    if: ${{ needs.check-if-package-json-changed.outputs.package-json-changed == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VER }}
          registry-url: ${{ env.NPM_REGISTRY }}
      - uses: actions/download-artifact@v3
        with:
          name: ${{ env.LIB_ARTIFACT_NAME }}
          path: ${{ env.LIB_DIST_PATH }}
      - run: npm publish
        working-directory: ${{ env.LIB_DIST_PATH }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  build-and-publish-storybook:
    needs: [build-extra-clarity]
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: node-modules-cache
        with:
          path: ${{ env.NODE_MODULES_PATH }}
          key: node-modules-${{ runner.os }}-${{ hashFiles(env.MAIN_PACKAGE_LOCK_JSON) }}
      - if: ${{ steps.node-modules-cache.outputs.cache-hit != 'true' }}
        run: npm ci
      - uses: actions/download-artifact@v3
        with:
          name: ${{ env.LIB_ARTIFACT_NAME }}
          path: ${{ env.LIB_DIST_PATH }}
      - name: Build storybook
        run: npm run ${{ env.SCRIPT_BUILD_STORYBOOK }}
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.STORYBOOK_FIREBASE_SERVICE_ACCOUNT }}
          projectId: ${{ env.SB_FIREBASE_PROJECT_ID }}
          target: ${{ env.SB_FIREBASE_TARGET_HOSTING }}
          channelId: live
