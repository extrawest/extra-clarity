
name: Build & publish extra-clarity and storybook

on:
  push:
    branches:
      - main

env:
  LIB_ARTIFACT_NAME: lib-build-artifact
  LIB_DIST: dist/extra-clarity
  LIB_PACKAGE_JSON: projects/extra-clarity/package.json
  MAIN_PACKAGE_JSON: package-lock.json
  NODE_MODULES: node_modules

jobs:

  build-extra-clarity:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: node-modules-cache
        with:
          path: ${{ env.NODE_MODULES }}
          key: node-modules-${{ runner.os }}-${{ hashFiles(env.MAIN_PACKAGE_JSON) }}
      - if: ${{ steps.node-modules-cache.outputs.cache-hit != 'true' }}
        run: npm ci
      - run: npm run build:extra-clarity
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.LIB_ARTIFACT_NAME }}
          path: ${{ env.LIB_DIST }}
          if-no-files-found: error


  check-if-package-json-changed:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      package-json-changed: ${{ steps.check-package-json.outputs.changed }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: check-package-json
        with:
          filters: |
            changed:
              - ${{ env.LIB_PACKAGE_JSON }}


  publish-package-to-npm:
    needs: [build-extra-clarity, check-if-package-json-changed]
    if: ${{ needs.check-if-package-json-changed.outputs.package-json-changed == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/
      - uses: actions/download-artifact@v3
        with:
          name: ${{ env.LIB_ARTIFACT_NAME }}
          path: ${{ env.LIB_DIST }}
      - run: npm publish
        working-directory: dist/extra-clarity
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}


  build-and-publish-storybook:
    needs: [build-extra-clarity]
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: node-modules-cache
        with:
          path: ${{ env.NODE_MODULES }}
          key: node-modules-${{ runner.os }}-${{ hashFiles(env.MAIN_PACKAGE_JSON) }}
      - if: ${{ steps.node-modules-cache.outputs.cache-hit != 'true' }}
        run: npm ci
      - uses: actions/download-artifact@v3
        with:
          name: ${{ env.LIB_ARTIFACT_NAME }}
          path: ${{ env.LIB_DIST }}
      - run: npm run build-storybook
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.STORYBOOK_FIREBASE_SERVICE_ACCOUNT }}
          projectId: storybook-deploy
          target: storybook-hosting
          channelId: live
