import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { provideAnimations } from '@angular/platform-browser/animations';

import { ClrInputModule } from '@clr/angular';
import { type Meta, type StoryObj, applicationConfig, moduleMetadata } from '@storybook/angular';

import {
  BUTTON_DEFAULTS,
  EcButtonCopyToClipboardComponent,
} from '@extrawest/extra-clarity/button-copy-to-clipboard';

import {
  hideAllControlRows,
  hideAutoGeneratedControlType,
  noNumericDefaultValue,
} from '../../helpers';

type Story = StoryObj<EcButtonCopyToClipboardComponent>;

const meta: Meta<EcButtonCopyToClipboardComponent> = {
  title: 'Components/Button Copy-to-Clipboard',
  component: EcButtonCopyToClipboardComponent,
  decorators: [
    applicationConfig({
      providers: [provideAnimations()],
    }),
  ],
  parameters: { controls: { sort: 'requiredFirst' } },
  argTypes: {
    // INPUTS
    disabled: {},
    heightPx: { ...noNumericDefaultValue },
    iconSizePx: {
      table: {
        defaultValue: { summary: BUTTON_DEFAULTS.iconSizePx.toString() },
      },
    },
    label: {},
    labelFontSizePx: { ...noNumericDefaultValue },
    sizePx: {
      table: {
        defaultValue: { summary: BUTTON_DEFAULTS.buttonSizePx.toString() },
      },
    },
    textToCopy: {},
    title: {
      table: {
        defaultValue: { summary: BUTTON_DEFAULTS.title },
      },
    },
    widthPx: { ...noNumericDefaultValue },
    withAnimation: {},
    withBorder: {},
    // OUTPUTS
    copied: {
      control: false,
      ...hideAutoGeneratedControlType,
    },
    failed: {
      control: false,
      ...hideAutoGeneratedControlType,
    },
  },
  args: {
    disabled: false,
    // heightPx: 24,
    iconSizePx: BUTTON_DEFAULTS.iconSizePx,
    label: '',
    // labelFontSizePx: 12,
    sizePx: BUTTON_DEFAULTS.buttonSizePx,
    textToCopy: 'Hello World!',
    title: BUTTON_DEFAULTS.title,
    // widthPx: 24,
    withAnimation: true,
    withBorder: false,
  },
};

export default meta;

// eslint-disable-next-line @typescript-eslint/naming-convention
export const ButtonItselfStory: Story = {
  name: 'Story: Button itself',
  args: {
    textToCopy: 'Hello World',
    withBorder: true,
  },
};

// eslint-disable-next-line @typescript-eslint/naming-convention
export const DocsExampleStory: Story = {
  name: 'Story: Example for docs',
  decorators: [
    moduleMetadata({
      imports: [EcButtonCopyToClipboardComponent, ClrInputModule, CommonModule, FormsModule],
    }),
  ],
  render: (args) => ({
    props: args,
    template: `
      <style>
        .clr-form-control {
          margin-top: 0;
          width: 12.5rem;
        }
        input {
          width: 12.5rem;
        }
        .demo-container {
          display: flex;
          gap: .25rem;
        }
      </style>
      <div class="demo-container">
        <clr-input-container>
          <input clrInput [(ngModel)]="text" placeholder="Enter a string to be copied" />
        </clr-input-container>
        <ec-button-copy-to-clipboard [textToCopy]="text" />
      </div>
    `,
  }),
  // hide all controls since the purpose of this story is a hard-coded demo in the docs page
  argTypes: {
    ...hideAllControlRows(meta.argTypes),
  },
  args: {},
};
